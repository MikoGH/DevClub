__global__ void bfs_kernel(int *graph, int *frontier, int *next_frontier, int *visited, int num_nodes) {
    int id = blockIdx.x * blockDim.x + threadIdx.x;
    if (id < num_nodes && frontier[id]) {
        for (int i = 0; i < num_neighbors(id); i++) {
            int neighbor = get_neighbor(id, i);
            if (!visited[neighbor]) {
                visited[neighbor] = 1;
                next_frontier[neighbor] = 1;
            }
        }
    }
}
